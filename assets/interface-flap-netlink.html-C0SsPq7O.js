import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a as t,h as s,e,o as l,r as h}from"./app-dowPD55j.js";const k={};function p(r,i){const a=h("CaptionedImage");return l(),t("div",null,[i[0]||(i[0]=s(`<h1 id="identifying-network-interface-link-flap-using-netlink" tabindex="-1"><a class="header-anchor" href="#identifying-network-interface-link-flap-using-netlink"><span>Identifying network interface link flap using netlink</span></a></h1><p>Network interface flapping occurs when an interface repeatedly transitions between up and down states, causing intermittent connectivity and degrading overall network performance. This instability can lead to service disruptions, complicate troubleshooting efforts, and reduce the reliability of network communications. The challenge is to accurately detect, analyze, and mitigate these flapping events to ensure a stable and robust network environment.</p><h2 id="network-interface-link" tabindex="-1"><a class="header-anchor" href="#network-interface-link"><span>Network interface link</span></a></h2><p>A network interface link is a connection between a network interface and another network interface or node. A network interface is the point of connection between a device and a network.</p><h2 id="what-is-a-link-flap" tabindex="-1"><a class="header-anchor" href="#what-is-a-link-flap"><span>What is a link flap?</span></a></h2><p>Link flap is a condition where a communications link alternates between up and down states.</p><h3 id="cause" tabindex="-1"><a class="header-anchor" href="#cause"><span>Cause</span></a></h3><p>Link flap can be caused by end station reboots, power-saving features, incorrect duplex configuration or marginal connections, faulty transceivers or ports, and signal integrity issues on the link.</p><h3 id="effect" tabindex="-1"><a class="header-anchor" href="#effect"><span>Effect</span></a></h3><p>Link flapping on an interface causes <strong>increased latency</strong>, <strong>network instability</strong> and even <strong>application downtime</strong>, which everyone wants to avoid.</p><h3 id="downside" tabindex="-1"><a class="header-anchor" href="#downside"><span>Downside</span></a></h3><p>Most of the time, a link flap is identified only after it starts causing noticeable issues, often leading to prolonged downtime or performance degradation. Debugging usually spans multiple teams—Application, Operations, and Infrastructure—since each initially assumes the problem lies within their own domain. By the time the root cause is identified as a link flap, the issue may have persisted for hours, damaging the application&#39;s reputation and user trust.</p><h2 id="identifying-a-link-flap" tabindex="-1"><a class="header-anchor" href="#identifying-a-link-flap"><span>Identifying a link flap</span></a></h2><h3 id="link-status" tabindex="-1"><a class="header-anchor" href="#link-status"><span>Link status</span></a></h3><p>To get the interface link status, we can make use of the <code>ip link</code> command and look for the <code>state</code> in the ouptut.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lo:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LOOPBACK,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 65536</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UNKNOWN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DEFAULT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/loopback</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 00:00:00:00:00:00</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DORMANT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qlen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d4:54:8b:c4:7b:dd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span></span></code></pre></div><p>When the <code>state</code> of the network interface changes between <code>UP</code> and <code>DOWN</code>, we have a flap.</p><h3 id="ip-monitor" tabindex="-1"><a class="header-anchor" href="#ip-monitor"><span>ip monitor</span></a></h3><p>The <a href="https://man7.org/linux/man-pages/man8/ip-monitor.8.html" target="_blank" rel="noopener noreferrer">ip-monitor</a> utility provided in Linux continuously monitors the state of devices, addresses, routes and dumps the event.</p><p>To monitor only the link status,</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="terminal-1" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monitor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span></span></code></pre></div><p>From another terminal, we will make the <code>wlp0s20f3</code> status as down.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="terminal-2" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down</span></span></code></pre></div><p>We received some event print in terminal-1.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="terminal-1" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monitor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAST,U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">T&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DOWN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d4:54:8b:c4:7b:dd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span></span></code></pre></div><p>The status of the interface can be made <code>UP</code> again by,</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="terminal-2" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span></span></code></pre></div><div class="language-bash has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="bash" data-title="terminal-1" style="--vp-collapsed-lines:5;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ip monitor link (output contd.)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DOWN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d4:54:8b:c4:7b:dd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DORMANT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d4:54:8b:c4:7b:dd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mtu</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1500</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qdisc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> noqueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d4:54:8b:c4:7b:dd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> brd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wlp0s20f3:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    link/ether</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">^C</span></span></code></pre><div class="collapsed-lines"></div></div><p>We can identify the interface in which the flap occurs by parsing the output. In this case, it will be <code>wlp0s20f3</code>.</p><blockquote><p>One should NOT determine the interface flap with just one up/down event. It can be caused because of maintenance as well. Ideally, if there are multiple up/down events within a certain period of time, we can consider it as a flap.</p></blockquote><p>The man page of <code>ip-monitor</code> mentions that it opens <code>RTNETLINK</code>, listens on it and dumps the state changes. We will explore more about <code>netlink</code> in the next section.</p><h3 id="netlink" tabindex="-1"><a class="header-anchor" href="#netlink"><span>Netlink</span></a></h3><p>One of the reason that led to explore netlink was, the output provided by the <code>ip monitor</code> command. It looks like a dump as stated in the manpage.</p><p>Netlink is a powerful communication mechanism in the Linux kernel that allows interaction between the kernel and user-space applications. Originally introduced as a replacement for the traditional ioctl system calls, Netlink provides a more flexible, efficient, and extensible interface for exchanging messages between these two layers.</p><p>Netlink is implemented as a socket-based IPC (Inter-Process Communication) mechanism and is widely used in networking, system monitoring, and kernel configuration tasks.</p><h4 id="advantages-of-netlink" tabindex="-1"><a class="header-anchor" href="#advantages-of-netlink"><span>Advantages of Netlink</span></a></h4><ol><li>Netlink messages have a structured format with headers (nlmsghdr) that describe the payload, making parsing efficient.</li><li>Applications open a Netlink socket and send/receive messages using standard socket APIs (e.g., socket(), send(), recv()).</li><li>Async notifications: the kernel can proactively notify user-space processes about specific events. and much more</li></ol><h4 id="implementation" tabindex="-1"><a class="header-anchor" href="#implementation"><span>Implementation</span></a></h4><p>The implementation example uses <code>python</code> for listening to netlink events. Netlink socket uses the <code>AF_NETLINK</code> address family and supports multiple protocol types such as <code>NETLINK_ROUTE</code>, <code>NETLINK_FIREWALL</code> and etc.,</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">NOTE</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">: The values of RTM_* are defined in rtnetlink.h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create a netlink socket</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sock </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> socket.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">socket</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(socket.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">AF_NETLINK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, socket.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">SOCK_RAW</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">NETLINK_ROUTE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Bind the socket to the desired group to get the notification</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sock.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">bind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">RTM_NEWLINK</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> RTM_DELLINK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once bound, we can start to receive the message and parse it. I had mentioned that netlink messages have a structured format that makes the parsing easier and efficient. Let&#39;s take a look at the message structure.</p>`,41)),e(a,{src:"/images/blog/interface-flap-netlink/msg_structure.png",caption:"Netlink message structure"}),i[1]||(i[1]=s(`<p>The first 32bit (4bytes) represents the message length followed by the type <code>RTM_*</code> link (16bit). In our case, it will be either <code>RTM_NEWLINK</code> or <code>RTM_DELLINK</code>. We will use python <a href="https://docs.python.org/3/library/struct.html" target="_blank" rel="noopener noreferrer">struct</a> package to parse the netlink message. A quick refresh on the <a href="https://docs.python.org/3/library/struct.html#format-characters" target="_blank" rel="noopener noreferrer">format characters</a>. We will ignore the sequence number and port as it goes beyond the scope of this blog.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="parser.py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nlmsg_len, nlmsg_type, flags </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> struct.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unpack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;IHH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># sequence numbers = 4bytes, port = 4bytes.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># We read the length, type, flags from the first 8 bytes.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Remaining is the payload.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">payload </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All netlink link messages share a common header (<code>struct ifinfomsg</code>) which is appended after the netlink header (<code>struct nlmsghdr</code>).The meaning of each field may differ depending on the message type. A struct ifinfomsg is defined in <code>&lt;linux/rtnetlink.h&gt;</code> to represent the header.</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="struct ifinfomsg" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ifinfomsg {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   ifi_family;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   __ifi_pad;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> short</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ifi_type;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       /* ARPHRD_* */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     ifi_index;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      /* Link index   */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unsigned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ifi_flags;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      /* IFF_* flags  */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    unsigned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ifi_change;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     /* IFF_* change mask */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" data-title="parser.py" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ifi_family, ifi_pad, ifi_type, ifi_index, ifi_flags, ifi_change </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> struct.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unpack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;BBhiII&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, payload[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># from if.h</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">IFF_UP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">IFF_RUNNING</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">IFA_INTERFACE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">event </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;down&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (ifi_flags </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> IFF_UP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (ifi_flags </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> IFF_RUNNING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # Interface is considered up, if and only if its UP and RUNNING.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # Some interfaces may be just added, we don&#39;t need that for now.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    event </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;up&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">attrs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> parse_attributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(payload[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">interface </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> attrs[</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">IFA_INTERFACE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf-8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">rstrip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\x00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>The <code>parse_attributes</code> is a method that will parse the remaining payload based on <code>TLV</code> (type, length, value) and returns a <code>dict</code> containing the <code>interface</code> in value.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="parser.py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> parse_attributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;Parse TLV (type, length, value) attributes from the payload.&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    attrs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Minimum TLV header size</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        rta_len, rta_type </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> struct.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unpack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HH&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, data[:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rta_len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> or</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rta_len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            break</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Malformed attribute</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:rta_len]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        attrs[rta_type] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data[rta_len:]  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Move to the next attribute</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> attrs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With <code>interface</code> and <code>nlmsg_type</code>, we can identify the flapping interface by storing the previous state of the interface received from netlink event.</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" data-title="python" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># we will store the previous states of the interface and its last event time for identifying the flap.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># eg: {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#   &quot;wlp0s20f3&quot;: {&quot;state&quot;: &#39;up&#39;, &quot;timestamp&quot;: 1737887558000}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prev_states </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">interface </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # from prev code.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">event </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # from prev code.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> interface </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> prev_states </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    prev_states[interface][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;state&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> prev_states[interface][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;timestamp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # we received a state change for the interface within 10mins. So, this is a flap!</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # We can tweak the threshold as needed.</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Interface flap detected for </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">interface</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>Thank you for reading! See you in the next post.</p>`,10))])}const o=n(k,[["render",p],["__file","interface-flap-netlink.html.vue"]]),A=JSON.parse('{"path":"/blog/interface-flap-netlink.html","title":"Identifying network interface link flap using netlink","lang":"en-US","frontmatter":{"title":"Identifying network interface link flap using netlink","description":"A detailed explanation on how to identify link flaps using netlink","lang":"en-US","date":"2025-01-26T00:00:00.000Z","category":["linux"],"tag":["netlink","flap"],"head":[["meta",{"name":"keywords","content":"interface flap netlink research linux"}],["meta",{"property":"og:url","content":"https://syogaraj.github.io/blog/interface-flap-netlink.html"}],["meta",{"property":"og:site_name","content":"Yogaraj.S"}],["meta",{"property":"og:title","content":"Identifying network interface link flap using netlink"}],["meta",{"property":"og:description","content":"A detailed explanation on how to identify link flaps using netlink"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-02T10:20:18.000Z"}],["meta",{"property":"article:tag","content":"netlink"}],["meta",{"property":"article:tag","content":"flap"}],["meta",{"property":"article:published_time","content":"2025-01-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-02T10:20:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Identifying network interface link flap using netlink\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-02T10:20:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yogaraj. S\\",\\"email\\":\\"yogarajsivaprakasam@gmail.com\\"}]}"]],"star":true},"headers":[{"level":2,"title":"Network interface link","slug":"network-interface-link","link":"#network-interface-link","children":[]},{"level":2,"title":"What is a link flap?","slug":"what-is-a-link-flap","link":"#what-is-a-link-flap","children":[{"level":3,"title":"Cause","slug":"cause","link":"#cause","children":[]},{"level":3,"title":"Effect","slug":"effect","link":"#effect","children":[]},{"level":3,"title":"Downside","slug":"downside","link":"#downside","children":[]}]},{"level":2,"title":"Identifying a link flap","slug":"identifying-a-link-flap","link":"#identifying-a-link-flap","children":[{"level":3,"title":"Link status","slug":"link-status","link":"#link-status","children":[]},{"level":3,"title":"ip monitor","slug":"ip-monitor","link":"#ip-monitor","children":[]},{"level":3,"title":"Netlink","slug":"netlink","link":"#netlink","children":[]}]}],"git":{"createdTime":1737888985000,"updatedTime":1738491618000,"contributors":[{"name":"yogaraj.s","username":"yogaraj.s","email":"yogarajsivaprakasam@gmail.com","commits":3,"url":"https://github.com/yogaraj.s"}]},"readingTime":{"minutes":5.01,"words":1503},"filePathRelative":"blog/interface-flap-netlink.md","localizedDate":"January 26, 2025","excerpt":"\\n<p>Network interface flapping occurs when an interface repeatedly transitions between up and down states, causing intermittent connectivity and degrading overall network performance. This instability can lead to service disruptions, complicate troubleshooting efforts, and reduce the reliability of network communications. The challenge is to accurately detect, analyze, and mitigate these flapping events to ensure a stable and robust network environment.</p>"}');export{o as comp,A as data};
